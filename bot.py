#!/usr/bin/env python3
import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram.error import BadRequest

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.environ.get('BOT_TOKEN')
WEBAPP_URL = os.environ.get('WEBAPP_URL')

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start —Å WebApp"""
    user = update.effective_user
    chat = update.effective_chat
    
    try:
        # –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º WebAppInfo –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–Ω—É—Ç—Ä–∏ Telegram
        keyboard = [
            [InlineKeyboardButton("‚öîÔ∏è –ò–≥—Ä–∞—Ç—å –≤ Daggerheart", web_app=WebAppInfo(url=WEBAPP_URL))]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        if chat.type == 'private':
            message = f"üé≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å—Ç–∞—Ä—Ç–∞:"
        else:
            message = f"üé≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å—Ç–∞—Ä—Ç–∞:"
        
        await update.message.reply_text(
            message,
            reply_markup=reply_markup
        )
        
        logger.info(f"WebApp –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.first_name}")
        
    except BadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ WebApp: {e}")
        
        # Fallback –Ω–∞ –æ–±—ã—á–Ω—É—é —Å—Å—ã–ª–∫—É
        keyboard = [
            [InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", url=WEBAPP_URL)]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"üé≠ {user.first_name}, –∏–≥—Ä–∞:\n\n‚ö†Ô∏è WebApp –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ",
            reply_markup=reply_markup
        )

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")

def main():
    app = Application.builder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start_command))
    app.add_error_handler(error_handler)
    
    logger.info("ü§ñ –ë–æ—Ç —Å WebApp –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling(drop_pending_updates=True)

if __name__ == '__main__':
    main()