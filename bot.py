import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

if not BOT_TOKEN or not WEBAPP_URL:
    logger.error("–ù–µ –Ω–∞–π–¥–µ–Ω—ã BOT_TOKEN –∏–ª–∏ WEBAPP_URL!")
    exit(1)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /start - –∑–∞–ø—É—Å–∫ Mini App"""
    user = update.effective_user
    
    keyboard = [[
        InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ Daggerheart", web_app=WebAppInfo(url=WEBAPP_URL))
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"üé≠ –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\nüé≤ –ó–∞–ø—É—Å–∫–∞–π Daggerheart –∏ —Å–æ–∑–¥–∞–≤–∞–π —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!",
        reply_markup=reply_markup
    )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == '__main__':
    main()